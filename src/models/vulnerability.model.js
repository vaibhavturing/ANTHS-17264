/**
 * Vulnerability Model
 * File: src/models/vulnerability.model.js
 * 
 * Stores information about security vulnerabilities found in the application
 */
const mongoose = require('mongoose');
const Schema = mongoose.Schema;

const vulnerabilitySchema = new Schema({
  scanId: {
    type: Schema.Types.ObjectId,
    ref: 'SecurityScan',
    required: true
  },
  title: {
    type: String,
    required: true
  },
  description: {
    type: String,
    required: true
  },
  severity: {
    type: String,
    required: true,
    enum: ['critical', 'high', 'medium', 'low', 'info'],
    index: true
  },
  cvssScore: {
    type: Number,
    min: 0,
    max: 10
  },
  cve: {
    type: String
  },
  affected: {
    component: String,
    version: String,
    path: String
  },
  remediation: {
    type: String
  },
  discoveredDate: {
    type: Date,
    required: true,
    default: Date.now
  },
  fixedDate: {
    type: Date
  },
  fixedBy: {
    type: Schema.Types.ObjectId,
    ref: 'User'
  },
  status: {
    type: String,
    required: true,
    enum: ['open', 'in_progress', 'fixed', 'wont_fix', 'false_positive'],
    default: 'open',
    index: true
  },
  statusHistory: [{
    status: {
      type: String,
      required: true,
      enum: ['open', 'in_progress', 'fixed', 'wont_fix', 'false_positive']
    },
    notes: String,
    changedBy: {
      type: Schema.Types.ObjectId,
      ref: 'User'
    },
    changedAt: {
      type: Date,
      default: Date.now
    }
  }],
  createdBy: {
    type: Schema.Types.ObjectId,
    ref: 'User',
    required: true
  }
}, {
  timestamps: true
});

// Indexes for common query patterns
vulnerabilitySchema.index({ severity: 1, status: 1 });
vulnerabilitySchema.index({ 'affected.component': 1 });
vulnerabilitySchema.index({ cvssScore: -1 });

module.exports = mongoose.model('Vulnerability', vulnerabilitySchema);