# Kubernetes Deployment for Healthcare Management Application
apiVersion: apps/v1
kind: Deployment
metadata:
  name: healthcare-api
  namespace: healthcare
  labels:
    app: healthcare-api
    tier: backend
spec:
  replicas: 3
  selector:
    matchLabels:
      app: healthcare-api
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  template:
    metadata:
      labels:
        app: healthcare-api
        tier: backend
    spec:
      containers:
      - name: healthcare-api
        image: ${ECR_REPOSITORY_URI}:${IMAGE_TAG}
        imagePullPolicy: Always
        ports:
        - containerPort: 8080
          name: http
        env:
        - name: NODE_ENV
          value: "production"
        - name: PORT
          value: "8080"
        - name: MONGODB_URI
          valueFrom:
            secretKeyRef:
              name: healthcare-secrets
              key: mongodb-uri
        - name: REDIS_HOST
          value: "healthcare-redis"
        - name: REDIS_PORT
          value: "6379"
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: healthcare-secrets
              key: redis-password
        - name: JWT_SECRET
          valueFrom:
            secretKeyRef:
              name: healthcare-secrets
              key: jwt-secret
        - name: S3_BUCKET
          valueFrom:
            configMapKeyRef:
              name: healthcare-config
              key: s3-bucket
        - name: S3_REGION
          valueFrom:
            configMapKeyRef:
              name: healthcare-config
              key: aws-region
        - name: S3_ACCESS_KEY
          valueFrom:
            secretKeyRef:
              name: healthcare-secrets
              key: aws-access-key
        - name: S3_SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: healthcare-secrets
              key: aws-secret-key
        - name: INSTANCE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        resources:
          limits:
            cpu: "500m"
            memory: "512Mi"
          requests:
            cpu: "200m"
            memory: "256Mi"
        readinessProbe:
          httpGet:
            path: /api/health/readiness
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /api/health/liveness
            port: 8080
          initialDelaySeconds: 20
          periodSeconds: 10
          timeoutSeconds: 2
          successThreshold: 1
          failureThreshold: 3
        volumeMounts:
        - name: tmp-volume
          mountPath: /app/tmp
      volumes:
      - name: tmp-volume
        emptyDir: {}
---
apiVersion: v1
kind: Service
metadata:
  name: healthcare-api
  namespace: healthcare
  labels:
    app: healthcare-api
    tier: backend
spec:
  selector:
    app: healthcare-api
  ports:
  - port: 80
    targetPort: 8080
    protocol: TCP
    name: http
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: healthcare-api
  namespace: healthcare
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: healthcare-api
  minReplicas: 2
  maxReplicas: 10
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70
  - type: Resource
    resource:
      name: memory
      target:
        type: Utilization
        averageUtilization: 80
  behavior:
    scaleDown:
      stabilizationWindowSeconds: 300